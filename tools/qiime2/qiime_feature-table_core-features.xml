<?xml version="1.0" ?>
<tool id="qiime_feature-table_core-features" name="qiime feature-table core-features" version="2019.7">
	<description>Identify core features in table</description>
	<requirements>
		<container type="docker">qiime2/core</container>
	</requirements>
	<command><![CDATA[
qiime feature-table core-features

--i-table=$itable

#if str($pminfraction):
 --p-min-fraction=$pminfraction
#end if

#if str($pmaxfraction):
 --p-max-fraction=$pmaxfraction
#end if

#if str($psteps):
 --p-steps=$psteps
#end if

--o-visualization=ovisualization
;
qiime tools export --input-path ovisualization.qzv --output-path out   && mkdir -p '$ovisualization.files_path'
&& cp -r out/* '$ovisualization.files_path'
&& mv '$ovisualization.files_path/index.html' '$ovisualization';
	]]></command>
	<inputs>
		<param format="qza,no_unzip.zip" label="--i-table: ARTIFACT FeatureTable[Frequency] The feature table to use in core features calculations.                                [required]" name="itable" optional="False" type="data"/>
		<param label="--p-min-fraction: PROPORTION Range(0.0, 1.0, inclusive_start=False) The minimum fraction of samples that a feature must be observed in for that feature to be considered a core feature.                                 [default: 0.5]" name="pminfraction" optional="True" type="float" value="0.5"/>
		<param label="--p-max-fraction: PROPORTION Range(0.0, 1.0, inclusive_end=True) The maximum fraction of samples that a feature must be observed in for that feature to be considered a core feature.                                 [default: 1.0]" name="pmaxfraction" optional="True" type="float" value="1.0"/>
		<param label="--p-steps: INTEGER    The number of steps to take between `min-fraction` and Range(2, None)     `max-fraction` for core features calculations. This parameter has no effect if `min-fraction` and `max-fraction` are the same value.        [default: 11]" name="psteps" optional="True" type="integer" value="11"/>
	</inputs>
	<outputs>
		<data format="html" label="${tool.name} on ${on_string}: visualization.qzv" name="ovisualization"/>
	</outputs>
	<help><![CDATA[
Train an almost arbitrary scikit-learn classifier
#################################################

Train a scikit-learn classifier to classify reads.

Parameters
----------
reference_reads : FeatureData[Sequence]
	\

reference_taxonomy : FeatureData[Taxonomy]
	\

classifier_specification : Str
	\

class_weight : FeatureTable[RelativeFrequency], optional
	\

Returns
-------
classifier : TaxonomicClassifier
	\

	]]></help>
<macros>
    <import>qiime_citation.xml</import>
</macros>
<expand macro="qiime_citation"/>
</tool>
