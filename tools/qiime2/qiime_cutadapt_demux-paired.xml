<?xml version="1.0" ?>
<tool id="qiime_cutadapt_demux-paired" name="qiime cutadapt demux-paired" version="2019.7">
	<description> - Demultiplex paired-end sequence data with barcodes in- sequence.</description>
	<requirements>
		<container type="docker">qiime2/core</container>
	</requirements>
	<command><![CDATA[
qiime cutadapt demux-paired
--i-seqs=$iseqs


#if $input_files_mforwardbarcodesfile:
#def list_dict_to_string_forward(list_dict):
	#set $file_list = list_dict[0]['additional_input'].__getattr__('file_name')
	#for d in list_dict[1:]:
		#set $file_list = $file_list + ' --m-forward-barcodes-file=' + d['additional_input'].__getattr__('file_name')
	#end for
	#return $file_list
#end def
--m-forward-barcodes-file=$list_dict_to_string_forward($input_files_mforwardbarcodesfile)
#end if

#if $input_files_mreversebarcodesfile:
#def list_dict_to_string_reverse(list_dict):
	#set $file_list = list_dict[0]['additional_input'].__getattr__('file_name')
	#for d in list_dict[1:]:
		#set $file_list = $file_list + ' --m-reverse-barcodes-file=' + d['additional_input'].__getattr__('file_name')
	#end for
	#return $file_list
#end def
--m-reverse-barcodes-file=$list_dict_to_string_reverse($input_files_mreversebarcodesfile)
#end if



#if str($pbatchsize):
  --p-batch-size $pbatchsize
#end if

#if str($pminimumlength):
  --p-minimum-length $pminimumlength
#end if




#if '__sq__' in str($mforwardbarcodescolumn):
  #set $mforwardbarcodescolumn_temp = $mforwardbarcodescolumn.replace('__sq__', "'")
  #set $mforwardbarcodescolumn = $mforwardbarcodescolumn_temp
#end if

#if '__db__' in str($mforwardbarcodescolumn):
  #set $mforwardbarcodescolumn_temp = $mforwardbarcodescolumn.replace('__db__', '"')
  #set $mforwardbarcodescolumn = $mforwardbarcodescolumn_temp
#end if




#if '__sq__' in str($mreversebarcodescolumn):
  #set $mreversebarcodescolumn_temp = $mreversebarcodescolumn.replace('__sq__', "'")
  #set $mreversebarcodescolumn = $mreversebarcodescolumn_temp
#end if

#if '__db__' in str($mreversebarcodescolumn):
  #set $mreversebarcodescolumn_temp = $mreversebarcodescolumn.replace('__db__', '"')
  #set $mreversebarcodescolumn = $mreversebarcodescolumn_temp
#end if



#if str($mforwardbarcodescolumn):
--m-forward-barcodes-column="$mforwardbarcodescolumn"
#end if

#if str($mreversebarcodescolumn):
 --m-reverse-barcodes-column="$mreversebarcodescolumn"
#end if



#if str($perrorrate):
 --p-error-rate=$perrorrate
#end if



--o-per-sample-sequences=opersamplesequences
--o-untrimmed-sequences=ountrimmedsequences
;

cp opersamplesequences.qza $opersamplesequences;
cp ountrimmedsequences.qza $ountrimmedsequences
	]]></command>
	<inputs>

		<param label="--p-batch-size:  INTEGER  The number of samples cutadapt demultiplexes Range(0, None) concurrently. Demultiplexing in smaller batches will yield the same result with marginal speed loss, and may solve 'too many files' errors related to sample quantity. Set to '0' to process all samples at once. [default: 0]" name="pbatchsize" optional="True" type="integer" value="0" min="0"/>
		<param label="--p-minimum-length: INTEGER  Range(1, None) Discard reads shorter than specified value. Note, the cutadapt default of 0 has been overridden, because that value produces empty sequence records.  [default: 1]" name="pminimumlength" optional="True" type="integer" value="1" min="1"/>



		<param format="qza,no_unzip.zip" label="--i-seqs: ARTIFACT MultiplexedPairedEndBarcodeInSequence The paired-end sequences to be demultiplexed. [required]" name="iseqs" optional="False" type="data"/>
		<param label="--m-forward-barcodes-column: COLUMN  MetadataColumn[Categorical] The sample metadata column listing the per-sample barcodes for the forward reads.           [required]" name="mforwardbarcodescolumn" optional="False" type="text"/>
		<param label="--m-reverse-barcodes-column: COLUMN  MetadataColumn[Categorical] The sample metadata column listing the per-sample barcodes for the reverse reads.           [optional]" name="mreversebarcodescolumn" optional="True" type="text"/>

		<repeat name="input_files_mforwardbarcodesfile" optional="False" title="--m-forward-barcodes-file">
			<param label="--m-forward-barcodes-file: Metadata file or artifact viewable as metadata. This option may be supplied multiple times to merge metadata. [required]" name="additional_input" type="data" format="tabular,qza,no_unzip.zip" />
		</repeat>

		<repeat name="input_files_mreversebarcodesfile" optional="False" title="--m-reverse-barcodes-file">
			<param label="--m-reverse-barcodes-file: Metadata file or artifact viewable as metadata. This option may be supplied multiple times to merge metadata. [required]" name="additional_input" type="data" format="tabular,qza,no_unzip.zip" />
		</repeat>

		<param label="--p-error-rate: PROPORTION Range(0, 1, inclusive_end=True) The level of error tolerance, specified as the maximum allowable error rate.         [default: 0.1]" name="perrorrate" optional="True" type="float" min="0" max="1" exclude_max="False" value="0.1"/>
	</inputs>
	<outputs>
		<data format="qza" label="${tool.name} on ${on_string}: persamplesequences.qza" name="opersamplesequences"/>
		<data format="qza" label="${tool.name} on ${on_string}: untrimmedsequences.qza" name="ountrimmedsequences"/>
	</outputs>
	<help><![CDATA[
Demultiplex paired-end sequence data with barcodes in-sequence.
################################################################

Demultiplex sequence data (i.e., map barcode reads to sample ids). Barcodes
are expected to be located within the sequence data (versus the header, or
a separate barcode file).

Parameters
----------
seqs : MultiplexedPairedEndBarcodeInSequence
    The paired-end sequences to be demultiplexed.
forward_barcodes : MetadataColumn[Categorical]
    The sample metadata column listing the per-sample barcodes for the
    forward reads.
reverse_barcodes : MetadataColumn[Categorical], optional
    The sample metadata column listing the per-sample barcodes for the
    reverse reads.
error_rate : Float % Range(0, 1, inclusive_end=True), optional
    The level of error tolerance, specified as the maximum allowable error
    rate.
batch_size : Int % Range(0, None), optional
    The number of samples cutadapt demultiplexes concurrently.
    Demultiplexing in smaller batches will yield the same result with
    marginal speed loss, and may solve "too many files" errors related to
    sample quantity. Set to "0" to process all samples at once.
minimum_length : Int % Range(1, None), optional
    Discard reads shorter than specified value. Note, the cutadapt default
    of 0 has been overridden, because that value produces empty sequence
    records.

Returns
-------
per_sample_sequences : SampleData[PairedEndSequencesWithQuality]
    The resulting demultiplexed sequences.
untrimmed_sequences : MultiplexedPairedEndBarcodeInSequence
    The sequences that were unmatched to barcodes.
	]]></help>
<macros>
    <import>qiime_citation.xml</import>
</macros>
<expand macro="qiime_citation"/>
</tool>
